services:
  frontend:
    container_name: rsf-frontend
    build:
      context: ../rsf-utility-frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_CLIENT_ID: ${REACT_APP_CLIENT_ID}
        REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend
    networks:
      - rsf_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    container_name: rsf-backend
    build:
      context: ../rsf-utility-backend
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DATABASE}?authSource=admin
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - mongo
    volumes:
      - backend_logs:/app/logs
    networks:
      - rsf_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    container_name: rsf-mongo
    image: mongo:8
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    ports:
      - "27018:27017"
    volumes:
      - ./mongo_data:/data/db
    restart: unless-stopped
    networks:
      - rsf_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  loki:
    container_name: rsf-loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3100/ready",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rsf_network

  grafana:
    container_name: rsf-grafana
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      loki:
        condition: service_started
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - rsf_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  mongo_data:
    name: rsf_mongo_data
    driver: local
  loki_data:
    name: rsf_loki_data
    driver: local
  grafana_data:
    name: rsf_grafana_data
    driver: local
  backend_logs:
    name: rsf_backend_logs
    driver: local

networks:
  rsf_network:
    driver: bridge
