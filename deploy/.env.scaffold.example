# Environment Variables Template for RSF Utility Docker Compose Scaffold

# Copy this file to .env and configure with your specific values
# cp .env.example .env

#################################################
# CORE APPLICATION CONFIGURATION
#################################################

# Environment mode (development, production, test)
NODE_ENV=production

# Logging level (debug, info, warn, error)
LOG_LEVEL=info

#################################################
# DATABASE CONFIGURATION
#################################################

# MongoDB Root Credentials (REQUIRED)
MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=your-secure-mongo-password

# Primary MongoDB connection string
MONGODB_URI=mongodb://admin:your-secure-mongo-password@mongo:27017/rsf-utility?authSource=admin

# TODO: Separate database URIs for microservice isolation
# ORDER_DB_URI=mongodb://admin:your-secure-mongo-password@orderdb:27017/orders?authSource=admin
# SETTLE_DB_URI=mongodb://admin:your-secure-mongo-password@settledb:27017/settlements?authSource=admin
# RECON_DB_URI=mongodb://admin:your-secure-mongo-password@recondb:27017/reconciliation?authSource=admin
# CONFIG_DB_URI=mongodb://admin:your-secure-mongo-password@configdb:27017/config?authSource=admin
# AUDIT_DB_URI=mongodb://admin:your-secure-mongo-password@auditdb:27017/audit?authSource=admin

#################################################
# AUTHENTICATION & SECURITY
#################################################

# JWT secret key (REQUIRED - use a strong 256-bit key)
# Generate with: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-256-bits

# API client credentials
CLIENT_ID=your-client-id
CLIENT_SECRET=your-client-secret

#################################################
# ONDC PROTOCOL CONFIGURATION
#################################################

# ONDC environment (STAGING, PREPROD, PROD)
ONDC_ENV=STAGING

# ONDC Gateway URLs (optional - defaults provided)
GATEWAY_STAGING=https://staging.gateway.proteantech.in/
GATEWAY_PREPROD=https://preprod.gateway.ondc.org/
GATEWAY_PROD=https://prod.gateway.ondc.org/

# ONDC Registry URLs (optional - defaults provided)
REGISTRY_STAGING=https://staging.registry.ondc.org/
REGISTRY_PREPROD=https://preprod.registry.ondc.org/
REGISTRY_PROD=https://prod.registry.ondc.org/

#################################################
# SETTLEMENT AGENCY INTEGRATION
#################################################

# Settlement agency API configuration
SETTLEMENT_AGENCY_URL=https://your-settlement-agency.com/api
SETTLEMENT_AGENCY_KEY=your-settlement-agency-api-key

#################################################
# FRONTEND CONFIGURATION
#################################################

# Backend URL for frontend (use Docker service name for internal communication)
REACT_APP_BACKEND_URL=http://backend:3000

# Public URL path (for reverse proxy deployment)
PUBLIC_URL=/rsf-sdk-utility

# Build optimization (disable source maps in production)
GENERATE_SOURCEMAP=false

# TODO: Additional frontend configurations
# REACT_APP_API_TIMEOUT=30000
# REACT_APP_POLLING_INTERVAL=5000
# REACT_APP_ENVIRONMENT=production

#################################################
# OBSERVABILITY CONFIGURATION
#################################################

# Loki log aggregation (use Docker service name)
LOKI_HOST=http://loki:3100

# Grafana admin credentials
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=your-grafana-password

# Grafana plugins to install (comma-separated)
GRAFANA_PLUGINS=grafana-piechart-panel

# TODO: Additional observability configurations
# GRAFANA_SECRET_KEY=your-grafana-secret-key
# GF_SMTP_ENABLED=false
# GF_SMTP_HOST=smtp.example.com

#################################################
# ADDITIONAL SERVICE CONFIGURATIONS
#################################################

# TODO: Redis configuration (when enabled)
# REDIS_PASSWORD=your-redis-password

# TODO: SMTP configuration for notifications
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your-smtp-user
# SMTP_PASSWORD=your-smtp-password

# TODO: Notification service configuration
# NOTIFICATION_SERVICE_URL=http://notification-service:8080

#################################################
# PRODUCTION DEPLOYMENT SETTINGS
#################################################

# TODO: SSL/TLS certificate paths (for NGINX)
# SSL_CERTIFICATE_PATH=/etc/ssl/certs/rsf-utility.crt
# SSL_CERTIFICATE_KEY_PATH=/etc/ssl/private/rsf-utility.key

# TODO: External volume configuration
# MONGO_DATA_VOLUME_NAME=rsf_mongo_data_prod
# GRAFANA_DATA_VOLUME_NAME=rsf_grafana_data_prod
# LOKI_DATA_VOLUME_NAME=rsf_loki_data_prod

# TODO: Network configuration
# DOCKER_NETWORK_SUBNET=172.20.0.0/16
# DOCKER_NETWORK_GATEWAY=172.20.0.1

#################################################
# DEVELOPMENT OVERRIDES
#################################################

# Uncomment for development mode
# NODE_ENV=development
# LOG_LEVEL=debug
# REACT_APP_BACKEND_URL=http://localhost:3000

#################################################
# SECURITY NOTES
#################################################

# IMPORTANT: 
# 1. Never commit this file with real credentials to version control
# 2. Use strong, unique passwords for all services
# 3. Enable SSL/TLS in production environments
# 4. Regularly rotate secrets and API keys
# 5. Use Docker secrets or external secret management in production
# 6. Ensure proper network isolation and firewall rules
